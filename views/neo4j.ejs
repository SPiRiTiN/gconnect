<html ng-app="neo4j">
<head>
	<title><%= title %></title>
</head>

<script src="/js/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.15/angular.min.js"></script>
<script src="/js/neo4j.js"></script>

<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?2.1.3"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.layout.js?2.1.3"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.geom.js?2.1.3"></script>

<style type="text/css">

line {
  stroke: #ccc;
}

    </style>

<body ng-controller="neo4jCtrl">


<h1>Welcome to Neo4j!<h1>

Add Node!
<hr>
<form method="POST" action="/neo4j/insertNode">
	Name : <input name="name"><br>
	Emp id : <input name="empid"><br>
	<input type="submit" value="Submit">
</form>

<hr>

<form>
Search Node ID : <input ng-model="nodeId"><br>
<span> Node Details: {{node_details}}  </span>
<br>
<input type="button" ng-click="getNodeById(nodeId)" value="Submit">

</form>

<hr>

<form>
Search Employee Connections : <input ng-model="Emp_Con"><br><br>
<textarea rows="20" cols="75">
{{EmpFList}}
</textarea>
<br>
<input type="button" ng-click="getEmpFList(Emp_Con)" value="Submit">

</form>

<hr>

<form> Show All Nodes 
<br>
<input type="button" ng-click="getGraphJson()" value="All Nodes!">

<br>
<br>

<textarea rows="20" cols="75">
{{out}}
</textarea>

</form>

<hr>



<script type="text/javascript">


//alert("exec func");

// The query
var query= {"statements":[{"statement":"MATCH p=(n)-->(m)<--(k),(n)--(k) RETURN p Limit 100",
    "resultDataContents":["graph","row"]}]};

//the helper function provided by neo4j documents
function idIndex(a,id) {
    for (var i=0;i<a.length;i++) {
        if (a[i].id == id) return i;}
    return null;
}
// jQuery ajax call
var request = $.ajax({
    type: "POST",
    url: "http://neo4j:nxihtPMt2w@localhost:7474/db/data/transaction/commit",
    accepts: { json: "application/json" },
    dataType: "json",
    contentType:"application/json",
    data: JSON.stringify(query),
    //now pass a callback to success to do something with the data
    success: function (data) {
        // parsing the output of neo4j rest api
        data.results[0].data.forEach(function (row) {
            row.graph.nodes.forEach(function (n) {
                if (idIndex(nodes,n.id) == null){
                    nodes.push({id:n.id,label:n.labels[0],title:n.properties.name});
                }
            });
            links = links.concat( row.graph.relationships.map(function(r) {
                // the neo4j documents has an error : replace start with source and end with target
                return {source:idIndex(nodes,r.startNode),target:idIndex(nodes,r.endNode),type:r.type};
            }));
        });
        var graph = {nodes:nodes, links:links};

        //alert(graph);

        // Now do something awesome with the graph!

    }

});

</script>



<script type="text/javascript">

// var adjacencyList = {
//   1: [7,2,6],
//   2: [8,3,1],
//   3: [4,2,9],
//   4: [10,3,5],
//   5: [6,4,11],
//   6: [1,5,12],
//   7: [1,20,13],
//   8: [2,14,21],
//   9: [3,22,15],
//   10: [4,16,23],
//   11: [5,17,24],
//   12: [6,19,18],
//   13: [7,19],
//   14: [20,8],
//   15: [21,9],
//   16: [22,10],
//   17: [23, 11],
//   18: [24, 12],
//   19: [12, 13],
//   20: [14,7],
//   21: [8, 15],
//   22: [9,16],
//   23: [10, 17],
//   24: [11, 18]
// };

// var nodes = d3.values(adjacencyList),
//     links = d3.merge(nodes.map(function(source) {
//       return source.map(function(target) {
//         return {source: source, target: adjacencyList[target]};
//       });
//     }));

// var w = 960,
//     h = 500;

// var vis = d3.select("body").append("svg:svg")
//     .attr("width", w)
//     .attr("height", h);

// var force = d3.layout.force()
//     .nodes(nodes)
//     .links(links)
//     .size([w, h])
//     .start();

// var link = vis.selectAll("line.link")
//     .data(links)
//   .enter().append("svg:line");

// var node = vis.selectAll("circle.node")
//     .data(nodes)
//   .enter().append("svg:circle")
//     .attr("r", 5)
//     .call(force.drag);

// force.on("tick", function() {
//   link.attr("x1", function(d) { return d.source.x; })
//       .attr("y1", function(d) { return d.source.y; })
//       .attr("x2", function(d) { return d.target.x; })
//       .attr("y2", function(d) { return d.target.y; });

//   node.attr("cx", function(d) { return d.x; })
//       .attr("cy", function(d) { return d.y; });
// });

</script>

</body>
</html>